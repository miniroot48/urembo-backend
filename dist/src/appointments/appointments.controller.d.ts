import { AppointmentsService } from './appointments.service';
export declare class AppointmentsController {
    private appointmentsService;
    constructor(appointmentsService: AppointmentsService);
    getAllAppointments(): Promise<({
        client: {
            id: string;
            email: string;
            password: string;
            fullName: string | null;
            phone: string | null;
            avatarUrl: string | null;
            role: import(".prisma/client").$Enums.user_role;
            businessName: string | null;
            businessDescription: string | null;
            businessAddress: string | null;
            businessPhone: string | null;
            isVerified: boolean;
            isSuspended: boolean;
            suspendedAt: Date | null;
            suspendedBy: string | null;
            suspensionReason: string | null;
            onboardingStatus: import(".prisma/client").$Enums.onboarding_status | null;
            paymentAccountDetails: import("@prisma/client/runtime/library").JsonValue | null;
            paymentAccountType: string | null;
            paymentDetailsVerified: boolean | null;
            createdAt: Date | null;
            updatedAt: Date | null;
        };
        vendor: {
            id: string;
            email: string;
            password: string;
            fullName: string | null;
            phone: string | null;
            avatarUrl: string | null;
            role: import(".prisma/client").$Enums.user_role;
            businessName: string | null;
            businessDescription: string | null;
            businessAddress: string | null;
            businessPhone: string | null;
            isVerified: boolean;
            isSuspended: boolean;
            suspendedAt: Date | null;
            suspendedBy: string | null;
            suspensionReason: string | null;
            onboardingStatus: import(".prisma/client").$Enums.onboarding_status | null;
            paymentAccountDetails: import("@prisma/client/runtime/library").JsonValue | null;
            paymentAccountType: string | null;
            paymentDetailsVerified: boolean | null;
            createdAt: Date | null;
            updatedAt: Date | null;
        };
        service: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            name: string;
            description: string | null;
            isActive: boolean;
            price: import("@prisma/client/runtime/library").Decimal;
            currency: string;
            imageUrl: string | null;
            category: string | null;
            durationMinutes: number;
            deliveryMethod: string | null;
            metadata: import("@prisma/client/runtime/library").JsonValue | null;
            categoryId: string | null;
            subcategoryId: string | null;
            actualServiceId: string | null;
            vendorId: string;
        };
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        status: import(".prisma/client").$Enums.booking_status;
        notes: string | null;
        price: import("@prisma/client/runtime/library").Decimal | null;
        currency: string;
        durationMinutes: number;
        vendorId: string;
        totalAmount: import("@prisma/client/runtime/library").Decimal;
        clientId: string;
        serviceId: string;
        statusEnhanced: import(".prisma/client").$Enums.appointment_status_enhanced | null;
        escrowAmount: import("@prisma/client/runtime/library").Decimal | null;
        escrowStatus: string | null;
        commissionAmount: import("@prisma/client/runtime/library").Decimal | null;
        commissionRate: import("@prisma/client/runtime/library").Decimal | null;
        completionConfirmedAt: Date | null;
        autoReleaseAt: Date | null;
        staffId: string | null;
        appointmentDate: Date;
        startTime: Date | null;
        endTime: Date | null;
    })[]>;
}
