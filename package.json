{
  "name": "urembo-hub-api",
  "version": "1.0.0",
  "description": "Urembo Hub API - NestJS backend with Prisma",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "seed:cms": "ts-node prisma/seed-cms.ts",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:seed": "ts-node prisma/seed.ts",
    "db:seed:onboarding": "ts-node prisma/seed-onboarding.ts",
    "db:seed:admin": "ts-node prisma/seed-admin.ts",
    "db:seed:all": "ts-node prisma/seed-all.ts",
    "db:seed:test-data": "ts-node scripts/seed-test-data.ts",
    "db:seed:beauty-categories": "ts-node scripts/run-seed-beauty.ts",
    "db:seed:service-categories": "ts-node scripts/run-seed-service-categories.ts",
    "db:studio": "prisma studio",
    "test:emails": "ts-node src/scripts/test-emails.ts",
    "test:emails:auth": "ts-node src/scripts/test-auth-emails.ts",
    "test:emails:onboarding": "ts-node src/scripts/test-onboarding-emails.ts",
    "test:emails:orders": "ts-node src/scripts/test-orders-emails.ts",
    "test:emails:bookings": "ts-node src/scripts/test-bookings-emails.ts",
    "test:emails:payments": "ts-node src/scripts/test-payments-emails.ts",
    "test:emails:admin": "ts-node src/scripts/test-admin-emails.ts",
    "test:emails:all": "ts-node src/scripts/test-all-emails.ts",
    "test:emails:available": "ts-node src/scripts/test-available-emails.ts",
    "test:escrow:payments": "ts-node src/scripts/test-escrow-payments.ts",
    "test:escrow:mock": "ts-node src/scripts/test-escrow-simple-mock.ts",
    "test:paystack:subaccounts": "ts-node src/scripts/test-paystack-subaccounts.ts",
    "test:split:payments": "ts-node src/scripts/test-split-payments.ts",
    "setup:ngrok": "ts-node src/scripts/setup-ngrok.ts",
    "test:communication": "ts-node src/scripts/test-communication-service.ts"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^10.0.2",
    "@nestjs/platform-express": "^10.0.0",
    "@prisma/client": "^6.15.0",
    "axios": "^1.12.1",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "resend": "^4.0.0",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^6.15.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
